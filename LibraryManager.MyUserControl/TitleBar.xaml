<UserControl x:Class="LibraryManager.MyUserControl.TitleBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LibraryManager.MyUserControl"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d"
             x:Name="ucTitleBar" >
    <!--<UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                --><!--<ResourceDictionary Source="/ResourceXAML/MainResource.xaml"/>--><!--
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>-->
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:InvokeCommandAction Command="{Binding MouseMoveWindowCommand}"
                                   CommandParameter="{Binding ElementName=ucTitleBar}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <!-- Window option-->
    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="0">

        <StackPanel.Resources>
            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionMiniDarkButton}">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <Style TargetType="materialDesign:PackIcon">
                <Setter Property="Height" Value="25"/>
                <Setter Property="Width" Value="25"/>
            </Style>
        </StackPanel.Resources>

        <!-- Window Minimize-->
        <Button ToolTip="Minimize"
                Command="{Binding WindowMinimizeCommand}"
                CommandParameter="{Binding ElementName=ucTitleBar}">
            <materialDesign:PackIcon Kind="WindowMinimize"/>
        </Button>

        <!-- Window Maximize-->
        <Button ToolTip="Maximize" x:Name="btnWindowMaximize"
                Command="{Binding WindowMaximizeCommand}"
                CommandParameter="{Binding ElementName=ucTitleBar}">
            <materialDesign:PackIcon Kind="WindowMaximize" x:Name="iconWindowMaximize"/>
        </Button>

        <!-- Window Close-->
        <Button ToolTip="Close" Foreground="White"
                Command="{Binding WindowCloseCommand}"
                CommandParameter="{Binding ElementName=ucTitleBar}">
            <materialDesign:PackIcon Kind="WindowClose"/>
            <Button.Style>
                <Style TargetType="{x:Type Button}">

                    <Setter Property="Background" Value="{x:Null}"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="Width" Value="30"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Foreground" Value="White"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" Background="Transparent">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Red" TargetName="Border" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

    </StackPanel>

    
</UserControl>
